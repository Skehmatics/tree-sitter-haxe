===================
class
===================

class Main {}

---

(module (class_declaration (keyword) (identifier) (block)))

===================
class with type params
===================

class Main<T,U> {}

---

(module
  (class_declaration
    (keyword)
    (identifier)
    (type_param (attribute (identifier)))
    (type_param (attribute (identifier)))
    (block)
  )
)

===================
class with inheritance
===================

class Main extends Other {}

---

(module
  (class_declaration
    (keyword)
    (identifier)
    (keyword)
    (attribute (identifier))
    (block)
  )
)

===================
class with multiple inheritance
===================

class Main extends Other extends YetAnother {}

---

(module
  (class_declaration
    (keyword)
    (identifier)
    (keyword)
    (attribute (identifier))
    (keyword)
    (attribute (identifier))
    (block)
  )
)


===================
class constructor
===================

class Main {
  function new(){}
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration (keyword) (identifier) (block))
    )
  )
)


===================
class function
===================

class Main {
  function foo(){}
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration (keyword) (identifier) (block))
    )
  )
)

===================
class function with arg
===================

class Main {
  function foo(x){}
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration (keyword) (identifier)
        (function_arg (identifier))
        (block)
      )
    )
  )
)

===================
class function with arg and etc.
===================

class Main {
  function foo(x:Int = 3, y:String){}
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration (keyword) (identifier)
        (function_arg (identifier) (type (identifier)) (literal (integer)))
        (function_arg (identifier) (type (identifier)))
        (block)
      )
    )
  )
)


===================
class function with metadata
===================

class Main {
  @:test
  function foo(){}
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration
        (metadata (identifier))
        (keyword)
        (identifier)
        (block)
      )
    )
  )
)


===================
class public static inline function
===================

class Main {
  public static inline function foo(){}
}

---
(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration
      (keyword)
      (keyword)
      (keyword)
      (keyword)
      (identifier) (block))
    )
  )
)

===================
class function with declaration assignment statement
===================

class Main {
  function foo(){
    var x = 4;
    var y = 'test';
    var z = new Type();
    var a = Factory(1);
  }
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration (keyword) (identifier)
        (block
          (variable_declaration (keyword) (identifier) (operator) (literal (integer)))
          (variable_declaration (keyword) (identifier) (operator) (literal (string)))
          (variable_declaration (keyword) (identifier) (operator) (keyword) (call (attribute (identifier))))
          (variable_declaration (keyword) (identifier) (operator) (call (attribute (identifier)) (literal (integer))))
        )
      )
    )
  )
)

===================
class function with seperate declaration and assignment statements
===================

class Main {
  function foo(){
    var x;
    var y;

    x = 4;
    y = x;
  }
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (function_declaration (keyword) (identifier)
        (block
          (variable_declaration (keyword) (identifier))
          (variable_declaration (keyword) (identifier))
          (attribute (identifier)) (operator) (literal (integer))
          (attribute (identifier)) (operator) (attribute (identifier))
        )
      )
    )
  )
)


===================
class variables
===================

class Main {
  public var x;
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (variable_declaration
        (keyword)
        (keyword)
        (identifier)
      )
    )
  )
)

===================
class variables with basic type
===================

class Main {
  public var x:Int;
}

---

(module
  (class_declaration (keyword) (identifier)
    (block
      (variable_declaration
        (keyword)
        (keyword)
        (identifier)
        (type (identifier))
      )
    )
  )
)
